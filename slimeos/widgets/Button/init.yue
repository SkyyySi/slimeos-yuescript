import "awful"
import "gears"
import "wibox"
import "ruled"
import "beautiful"
import "menubar"
import "naughty"

import Object, util, wrap, ClassPlus from require("slimeos.lib")

--[ [
Button = { mt: {} }
Button.mt.__index = Button.mt
Button.mt.__name = "slimeos.widget.Button"
setmetatable(Button, Button.mt)

properties = {
	"bg_normal"
	"bg_selected"
	"bg_press"
	"fg_normal"
	"fg_selected"
	"fg_press"
	"mouse_effects"
}

for property in *properties
	Button["get_" .. property] = ()      => @_private[property]
	Button["set_" .. property] = (value) => @_private[property] = value

Button.mt.__call = (cls, args={}) ->
	@ = wibox.container.background()

	gears.table.crush(@, cls)

	if @_private == nil
		@_private = {}

	p = @_private

	with args
		p.bg_normal   = .bg_normal   ?? beautiful.Button_bg_normal   ?? "#FFFFFF00"
		p.bg_selected = .bg_selected ?? beautiful.Button_bg_selected ?? "#FFFFFF20"
		p.bg_press    = .bg_press    ?? beautiful.Button_bg_press    ?? "#FFFFFF40"

		p.fg_normal   = .fg_normal   ?? beautiful.Button_fg_normal
		p.fg_selected = .fg_selected ?? beautiful.Button_fg_selected
		p.fg_press    = .fg_press    ?? beautiful.Button_fg_press 

		@bg = .initial_bg ?? p.bg_normal
		@fg = .initial_fg ?? p.fg_normal

		p.mouse_effects = .mouse_effects ?? true

	@connect_signal("mouse::enter", () ->
		@bg = p.bg_selected

		if p.mouse_effects
			wb = mouse.current_wibox

			if not wb
				return

			p.previous_wibox = wb
			p.original_cursor = p.original_cursor ?? wb.cursor
			wb.cursor = "hand1"
	)

	@connect_signal("mouse::leave", () ->
		@bg = p.bg_normal

		if p.mouse_effects and p.previous_wibox
			p.previous_wibox.cursor = p.original_cursor
			p.previous_wibox = nil
	)

	@connect_signal("button::press", (_, _, _, button) ->
		@bg = p.bg_press
	)

	@connect_signal("button::release", (_, _, _, button) ->
		@bg = p.bg_selected
	)

	@

Button

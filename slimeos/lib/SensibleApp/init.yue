import awful from require("awesome_std")

Object = require("slimeos.lib.Object")
util   = require("slimeos.lib.util")

import Gio from require("lgi")

gio_recommended_apps_cache = {}

get_gio_recommended_app_for_mimetype = (mimetype, no_cache) ->
	if not no_cache
		if app = gio_recommended_apps_cache[mimetype]
			return app

	app_list = Gio.DesktopAppInfo.get_recommended_for_type()

	if app = app_list?[#app_list]
		gio_recommended_apps_cache[mimetype] = app
		app

terminals = {
	os.getenv("TERMINAL")
	"konsole"
	"alacritty"
	"kitty"
	"wezterm"
	"tilix"
	"xfce4-terminal"
	"gnome-terminal"
	"gnome-console"
	"qterminal"
	"lxterminal"
	"mate-terminal"
	"cutefish-terminal"
	"deepin-terminal"
	"cool-retro-term"
	"terminator"
	"maui-station"
	"terminology"
	"zutty"
	"termite"
	"urxvt"
	"uxterm"
	"xterm"
}

--- { command, should_run_in_terminal }
filemanagers = {
	{ os.getenv("FILEMANAGER"), false }
	{ "dolphin",    false }
	{ "nautilus",   false }
	{ "thunar",     false }
	{ "caja",       false }
	{ "krusader",   false }
	{ "nemo",       false }
	{ "pcmanfm-qt", false }
	{ "pcmanfm",    false }
	{ "cutefish-filemanager", false }
	{ "deepin-file-manager",  false }
	{ "peony",     false }
	{ "konqueror", false }
}

editors = {
	{ "codium",     false }
	{ "code",       false }
	{ "lite-xl",    false }
	{ "sublime",    false }
	{ "lapce",      false }
	{ "gvim",       false }
	{ "emacs",      false }
	{ "kate",       false }
	{ "gedit",      false }
	{ "mousepad",   false }
	{ "featherpad", false }
	{ "ecrire",     false }
	{ "notepadqq",  false }
	{ "pluma",      false }
	{ os.getenv("VISUAL"), true }
	{ os.getenv("EDITOR"), true }
	{ "micro",      true }
	{ "nano",       true }
	{ "nvim",       true }
	{ "vim",        true }
	{ "pico",       true }
	{ "qe",         true }
	{ "mg",         true }
	{ "jed",        true }
	{ "mcedit",     true }
	{ "xorg-xedit", false }
	{ "xed",        false }
	{ "vi",         true }
	{ "ed",         true }
}

browsers = {
	{ os.getenv("BROWSER"), false }
	{ "librewolf", false }
	{ "firefox",   false }
	{ "brave",     false }
	{ "chromium",  false }
	{ "luakit",    false }
	{ "falkon",    false }
	{ "epiphany",  false }
	{ "opera",     false }
	{ "konqueror", false }
	{ "google-chrome-stable",  false }
	{ "microsoft-edge-stable", false }
	{ "lynx",   true }
	{ "elinks", true }
}

shell_escape = (cmd) -> cmd::gsub([[']], [['"'"']])

export terminal = (cmd) ->
	iterate = (list, k) ->
		k, v = next(list, k)

		if k == nil
			return

		awful.spawn.easy_async({ "bash", "-c", "command -v '#{shell_escape(v)}' &> /dev/null"}, (stdout, stderr, reason, exit_code) ->
			if exit_code == 0
				awful.spawn { v }
				return

			iterate(list, k)
		)

	iterate(terminals)

export browser = (url="http://") ->
	protocol = url::match("^([a-zA-Z0-9_]+).//")
	Gio.AppInfo.launch_default_for_uri(protocol)

export filemanager = (file="") ->
	if app = get_gio_recommended_app_for_mimetype("inode/directory")
		app::launch()
		return

	--if Gio.AppInfo.launch_default_for_uri("file://")
	--	return

	iterate = (list, k) ->
		k, v = next(list, k)

		if k == nil
			return

		v = shell_escape(v[1])
		awful.spawn.easy_async({ "bash", "-c", "command -v '#{v}' &> /dev/null"}, (stdout, stderr, exit_code, reason) ->
			if stderr == 0
				awful.spawn { "bash", "-c", "'#{v} #{shell_escape(file)}'" }
				return

			iterate(list, k)
		)

	iterate(filemanagers)
